definitions:
  placelists-back_internal_server_dto.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  placelists-back_internal_server_dto.Meta:
    properties:
      success:
        type: boolean
    type: object
  placelists-back_internal_server_dto.Place:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      visited:
        type: boolean
    type: object
  placelists-back_internal_server_dto.PlaceCreate:
    properties:
      address:
        type: string
      name:
        type: string
      visited:
        type: string
    type: object
  placelists-back_internal_server_dto.PlaceUpdate:
    properties:
      address:
        type: string
      name:
        type: string
      visited:
        type: boolean
    type: object
  placelists-back_internal_server_dto.Placelist:
    properties:
      author_id:
        type: string
      author_username:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: integer
    type: object
  placelists-back_internal_server_dto.PlacelistCreate:
    properties:
      name:
        type: string
    type: object
  placelists-back_internal_server_dto.PlacelistUpdate:
    properties:
      name:
        type: string
      places_ids:
        items:
          type: string
        type: array
      status:
        type: integer
    type: object
  placelists-back_internal_server_dto.ResponseWrapper:
    properties:
      data: {}
      errors:
        items:
          $ref: '#/definitions/placelists-back_internal_server_dto.Error'
        type: array
      meta:
        $ref: '#/definitions/placelists-back_internal_server_dto.Meta'
    type: object
  placelists-back_internal_server_dto.User:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  placelists-back_internal_server_dto.UserUpdate:
    properties:
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: a.e.sokolkov@gmail.com
    name: Aleksey
  description: API for managing places, placelists and users
  title: Placelists API
  version: "1.0"
paths:
  /api/places:
    get:
      description: Get places matching name or address
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Place'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Place'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Search places by query
      tags:
      - places
  /api/v1/placelists:
    get:
      description: Get placelists matching name or author
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Search placelists by query
      tags:
      - placelists
    post:
      description: Add a new placelist to the database
      parameters:
      - description: Placelist data
        in: body
        name: placelist
        required: true
        schema:
          $ref: '#/definitions/placelists-back_internal_server_dto.PlacelistCreate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
      security:
      - BearerAuth: []
      summary: Create a new placelist
      tags:
      - placelists
  /api/v1/placelists/{id}:
    get:
      description: Get a specific placelist by its ID
      parameters:
      - description: Placelist ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
      security:
      - BearerAuth: []
      summary: Get placelist by ID
      tags:
      - placelists
    put:
      description: Update a specific placelist by its ID
      parameters:
      - description: Placelist ID
        in: path
        name: id
        required: true
        type: string
      - description: Placelist data
        in: body
        name: placelist
        required: true
        schema:
          $ref: '#/definitions/placelists-back_internal_server_dto.PlacelistUpdate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
              type: object
      security:
      - BearerAuth: []
      summary: Update placelist by ID
      tags:
      - placelists
  /api/v1/placelists/created:
    get:
      description: Get placelists created by the current user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get created placelists
      tags:
      - placelists
  /api/v1/placelists/followed:
    get:
      description: Get placelists followed by the current user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/placelists-back_internal_server_dto.Placelist'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get followed placelists
      tags:
      - placelists
  /api/v1/places:
    post:
      description: Add a new place to the database
      parameters:
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/placelists-back_internal_server_dto.PlaceCreate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
      security:
      - BearerAuth: []
      summary: Create a new place
      tags:
      - places
  /api/v1/places/{id}:
    get:
      description: Get a specific place by its ID
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
      security:
      - BearerAuth: []
      summary: Get place by ID
      tags:
      - places
    put:
      description: Update a specific place by its ID
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/placelists-back_internal_server_dto.PlaceUpdate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.Place'
              type: object
      security:
      - BearerAuth: []
      summary: Update place by ID
      tags:
      - places
  /api/v1/users/{id}:
    get:
      description: Get information about any user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
      summary: Get user by ID
      tags:
      - users
    put:
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/placelists-back_internal_server_dto.UserUpdate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
      summary: Update user by ID
      tags:
      - users
  /api/v1/users/my:
    get:
      description: Get information about the currently authenticated user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/placelists-back_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/placelists-back_internal_server_dto.User'
              type: object
      security:
      - BearerAuth: []
      summary: Get current user info
      tags:
      - users
swagger: "2.0"
