definitions:
  locpack-backend_internal_server_dto.AccessToken:
    properties:
      expiresIn:
        type: number
      refreshToken:
        type: string
      value:
        type: string
    type: object
  locpack-backend_internal_server_dto.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  locpack-backend_internal_server_dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  locpack-backend_internal_server_dto.Meta:
    properties:
      success:
        type: boolean
    type: object
  locpack-backend_internal_server_dto.Pack:
    properties:
      author:
        $ref: '#/definitions/locpack-backend_internal_server_dto.User'
      id:
        type: string
      name:
        type: string
      places:
        items:
          $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
        type: array
      status:
        type: string
    type: object
  locpack-backend_internal_server_dto.PackCreate:
    properties:
      name:
        type: string
    type: object
  locpack-backend_internal_server_dto.PackUpdate:
    properties:
      name:
        type: string
      places_ids:
        items:
          type: string
        type: array
      status:
        type: string
    type: object
  locpack-backend_internal_server_dto.Place:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      visited:
        type: boolean
    type: object
  locpack-backend_internal_server_dto.PlaceCreate:
    properties:
      address:
        type: string
      name:
        type: string
      visited:
        type: string
    type: object
  locpack-backend_internal_server_dto.PlaceUpdate:
    properties:
      address:
        type: string
      name:
        type: string
      visited:
        type: boolean
    type: object
  locpack-backend_internal_server_dto.Register:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  locpack-backend_internal_server_dto.ResponseWrapper:
    properties:
      data: {}
      errors:
        items:
          $ref: '#/definitions/locpack-backend_internal_server_dto.Error'
        type: array
      meta:
        $ref: '#/definitions/locpack-backend_internal_server_dto.Meta'
    type: object
  locpack-backend_internal_server_dto.User:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: a.e.sokolkov@gmail.com
    name: Aleksey
  description: API for managing places, packs and users
  title: Locpack API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      description: Authenticate user and return token
      parameters:
      - description: Login details
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.Login'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.AccessToken'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.AccessToken'
              type: object
      summary: User login
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      description: Register new user account
      parameters:
      - description: Registration details
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.Register'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.AccessToken'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.AccessToken'
              type: object
      summary: User registration
      tags:
      - Auth
  /api/v1/packs:
    get:
      description: Get packs matching name or author
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
      summary: Search packs by query
      tags:
      - Packs
    post:
      description: Add a new pack to the database
      parameters:
      - description: Pack data
        in: body
        name: pack
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.PackCreate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
      security:
      - BearerAuth: []
      summary: Create a new pack
      tags:
      - Packs
  /api/v1/packs/{id}:
    get:
      description: Get a specific pack by its ID
      parameters:
      - description: Pack ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
      summary: Get pack by ID
      tags:
      - Packs
    put:
      description: Update a specific pack by its ID
      parameters:
      - description: Pack ID
        in: path
        name: id
        required: true
        type: string
      - description: Pack data
        in: body
        name: pack
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.PackUpdate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
              type: object
      security:
      - BearerAuth: []
      summary: Update pack by ID
      tags:
      - Packs
  /api/v1/packs/created:
    get:
      description: Get packs created by the current user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get created packs
      tags:
      - Packs
  /api/v1/packs/followed:
    get:
      description: Get packs followed by the current user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Pack'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get followed packs
      tags:
      - Packs
  /api/v1/places:
    get:
      description: Get places matching name or address
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
                  type: array
              type: object
      summary: Search places by query
      tags:
      - Places
    post:
      description: Add a new place to the database
      parameters:
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.PlaceCreate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
      security:
      - BearerAuth: []
      summary: Register a new place
      tags:
      - Places
  /api/v1/places/{id}:
    get:
      description: Get a specific place by its ID
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
      summary: Get place by ID
      tags:
      - Places
    put:
      description: Update a specific place by its ID
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/locpack-backend_internal_server_dto.PlaceUpdate'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.Place'
              type: object
      security:
      - BearerAuth: []
      summary: Update place by ID
      tags:
      - Places
  /api/v1/users/{id}:
    get:
      description: Get information about any user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.User'
              type: object
      summary: Get user by ID
      tags:
      - Users
  /api/v1/users/my:
    get:
      description: Get information about the currently authenticated user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/locpack-backend_internal_server_dto.ResponseWrapper'
            - properties:
                data:
                  $ref: '#/definitions/locpack-backend_internal_server_dto.User'
              type: object
      security:
      - BearerAuth: []
      summary: Get current user info
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
