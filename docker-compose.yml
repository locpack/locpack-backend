name: locpack

services:
#  backend:
#    container_name: backend
#    build: .
#    entrypoint: /locpack-backend
#    ports:
#      - "8001:8080"
#    depends_on:
#      backend-db:
#        condition: service_healthy
#      keycloak:
#        condition: service_healthy
#    environment:
#      LP_DATABASE_DSN: host=backend-db user=postgres password=postgres dbname=postgres port=5432
#      LP_API_ADDRESS: 0.0.0.0:8080
#      LP_API_MODE: debug
#      LP_AUTH_URL: http://keycloak:8080
#      LP_AUTH_REALM: master
#      LP_AUTH_ADMIN_USERNAME: admin
#      LP_AUTH_ADMIN_PASSWORD: admin
#      LP_AUTH_CLIENT_ID: locpack-backend
#      LP_AUTH_CLIENT_SECRET: nssKJPp8b824rZJpLN9AKKqg98rS1ZDc

  backend-db:
    container_name: backend-db
    image: postgres:17
    ports:
      - "5401:5432"
    volumes:
      - backend-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  keycloak-db:
    container_name: keycloak-db
    image: postgres:17
    ports:
      - "5402:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2
    command: start-dev
    depends_on:
      keycloak-db:
        condition: service_healthy
    ports:
      - "8002:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
    healthcheck:
      test: [ 'CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { java.net.URI uri = java.net.URI.create(args[0]); System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)uri.toURL().openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live' ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

volumes:
  backend-db-data:
  keycloak-db-data:
  keycloak-data: