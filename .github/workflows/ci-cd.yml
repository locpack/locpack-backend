---
name: CI/CD

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

permissions:
  contents: read
  pull-requests: read
  checks: write
  packages: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup project
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.3"
      - name: Lint project
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  build-and-push:
    name: Build and Push
    runs-on: ubuntu-24.04
    needs: lint
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Connect to server and deploy container
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y \
              apt-transport-https \
              ca-certificates \
              curl \
              gnupg \
              lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker $USER
          fi
          docker ps -q --filter "name=${{ github.repository }}" | xargs -r docker stop
          docker ps -aq --filter "name=${{ github.repository }}" | xargs -r docker rm
          docker pull $IMAGE_NAME
          docker run -d --name ${{ github.repository }} -p 8082:8082 --restart unless-stopped $IMAGE_NAME
          EOF
